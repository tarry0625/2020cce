## 1.進階題：除惡務盡 : 輸入一個字串，將所有字元2去除後輸出。
```C
#include <stdio.h>

int main()
{
	char a[80];
	int i=0;
	scanf("%s",&a);
	
	while(a[i]!='\0')
	{
		if(a[i]!='2')
		{
			printf("%c",a[i]);
		}
		i++;
	}
	printf("\n");	
	
	
	return 0;	
}```
# 2.進階題：擲骰統計 : 輸入一字串為擲骰的結果，統計1到6點出現的狀況。 
```C
#include <iostream>
#include <cstring>
using namespace std;
int main()
{
	char a[81];
	int i,a1=0,a2=0,a3=0,a4=0,a5=0,a6=0;
	cin>>a;
	for(i=0;i<strlen(a);i++)
	{
		if(a[i]=='1')
		{	
			a1+=1;
		}
		if(a[i]=='2')
		{	
			a2+=1;
		}
		if(a[i]=='3')
		{	
			a3+=1;
		}
		if(a[i]=='4')
		{	
			a4+=1;
		}
		if(a[i]=='5')
		{	
			a5+=1;
		}
		if(a[i]=='6')
		{	
			a6+=1;
		}
		
	}
	cout<<"1:"<<a1<<endl<<"2:"<<a2<<endl<<"3:"<<a3<<endl<<"4:"<<a4<<endl<<"5:"<<a5<<endl<<"6:"<<a6<<endl;
	return 0;
}```
# 3.進階題：函數找整數的最大數字 : 設計一個函數max_digit(n)，找出組成正整數n中的最大數字，例如：183的最大數字為8。
```C
#include<iostream>
using namespace std;
int max_digit(int n)
{
	int max=0;
	while (n!=0)
	{
		int r=n%10;
		if(r>max)
			max=r;
			n/=10;
	}
	return max;
}


int main(){
  int n;cin>>n;
  cout<<"["<<max_digit(n)<<"]";
  return 0;
}
/* 上方C++ 的 main 函數 等價於 下方 C 的 main 函數
int main(void){
  int n;
  scanf("%d", &n);
  printf("[%d]", max_digit(n));
  return 0;
}
*/```
# 4.進階題：星星等腰三角 : 輸入1個正整數n，作為輸出星星三角的層數 
```C
#include <stdio.h>
int main()
{
	int n,i,j;
	scanf("%d",&n);
	
	for(i=1;i<=n;i++)
	{
		for(j=0 ; j<n-i ; j++)
		{	
			printf(" ");
		}
		for(j=0 ; j<i*2-1 ; j++)
		{
			printf("*");
		}
		printf("\n");	
	}
	
}```
# 5.基礎題：分開整數的每個數字 : 撰寫一個程式，輸入一個五位數的數字，將這個數字分成個別的數字，然後分別印出每個數字，數字中間必須相隔3個空格。例如，若輸入42139，則程式必須印出： 4 2 1 3 9  
```C
#include <stdio.h>
int main()
{
	int a,a1,a2,a3,a4,a5;
	scanf("%d",&a);
	a1=a/10000;
	a=a%10000;
	a2=a/1000;
	a=a%1000;
	a3=a/100;
	a=a%100;
	a4=a/10;
	a=a%10;
	a5=a;
	printf("%d   %d   %d   %d   %d",a1,a2,a3,a4,a5);
	
}```
# 6.基礎題：字元判別 : 輸入一個字元，若其為大寫字母則輸出U，若其為小寫字母則輸出L，若其為數字則輸出D，若為其他則輸出O。 
```C
#include <stdio.h>
int main()
{
	char a;
	scanf("%c",&a);
	
	if(a>='A' && a<='Z')
		printf("U");
	else if(a>='a' && a<='z')
		printf("L");
	else if(a>='0' && a<='9')
		printf("D");
	else
		printf("O");		
	
	
}```
# 7.基礎題：數字之首 : 輸入一個整數N，請找出這個數字的首位數。
```C
#include <stdio.h>
int main()
{
	int a,b=0,s;
	scanf("%d",&a);
	s=a;
	while(a!=0)
	{
		a/=10;
		b++;
	}
	for(int i=1;i<b;i++)
	{
		s/=10;
		
	}
	printf("%d",s);	
}```
# 8.基礎題：輸出從0到N的偶數 : 輸入一正整數Ｎ後，利用迴圈概念輸出所有0～N內的偶數 
```C
#include <stdio.h>
int main()
{
	int n;
	scanf("%d",&n);
	for(int i=1;i<=n;i++)
	{
		if(i%2==0)
		{
			printf("%d ",i);
		}
	}
	
}```
